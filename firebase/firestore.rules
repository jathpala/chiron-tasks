rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /tasks/{document} {
    	allow get, list: if request.auth != null &&
                          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.authorised == true &&
                          request.auth.uid == resource.data.user;

      allow create:    if request.auth != null &&
                          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.authorised == true &&
                          request.auth.uid == request.resource.data.user;

      allow update:    if request.auth != null &&
                          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.authorised == true &&
                          request.auth.uid == resource.data.user &&
                          request.resource.data.user == resource.data.user;

      allow delete:    if request.auth != null &&
                          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.authorised == true &&
                          request.auth.uid == resource.data.user;
    }
    match /users/{user_id} {
      allow get: if request.auth != null &&
                    request.auth.uid == user_id;
    }
  }
}
